// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('SignInPlayerTesr', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('SignInPlayerTesr', async function() {
    // Test name: SignInPlayerTesr
    // Step # | name | target | value | comment
    // 1 | open | /login |  | 
    await driver.get("http://localhost:4200/login")
    // 2 | setWindowSize | 945x905 |  | 
    await driver.manage().window().setRect(945, 905)
    // 3 | click | id=inlineRadio2 |  | 
    await driver.findElement(By.id("inlineRadio2")).click()
    // 4 | click | id=mat-input-0 |  | 
    await driver.findElement(By.id("mat-input-0")).click()
    // 5 | type | id=mat-input-0 | prueba@prueba.com | 
    await driver.findElement(By.id("mat-input-0")).sendKeys("prueba@prueba.com")
    // 6 | click | id=mat-input-1 |  | 
    await driver.findElement(By.id("mat-input-1")).click()
    // 7 | mouseOver | css=.mat-raised-button |  | 
    {
      const element = await driver.findElement(By.css(".mat-raised-button"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 8 | type | id=mat-input-1 | prueba@prueba | 
    await driver.findElement(By.id("mat-input-1")).sendKeys("prueba@prueba")
    // 9 | click | css=.mat-raised-button |  | 
    await driver.findElement(By.css(".mat-raised-button")).click()
    // 10 | mouseOut | css=.mat-raised-button |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
  })
})
